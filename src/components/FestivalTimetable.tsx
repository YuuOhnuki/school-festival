'use client';

import { useScroll, useTransform, motion } from 'motion/react';
import React, { useEffect, useRef, useState } from 'react';

interface TimelineEntry {
    title: string;
    content: React.ReactNode;
}

// Timeline Component
const Timeline = ({ data }: { data: TimelineEntry[] }) => {
    const ref = useRef<HTMLDivElement>(null);
    const containerRef = useRef<HTMLDivElement>(null);
    const [height, setHeight] = useState(0);

    useEffect(() => {
        if (ref.current) {
            const rect = ref.current.getBoundingClientRect();
            setHeight(rect.height);
        }
    }, [ref]);

    const { scrollYProgress } = useScroll({
        target: containerRef,
        offset: ['start 10%', 'end 50%'],
    });

    const heightTransform = useTransform(scrollYProgress, [0, 1], [0, height]);
    const opacityTransform = useTransform(scrollYProgress, [0, 0.1], [0, 1]);

    return (
        <div className="w-full bg-white dark:bg-neutral-950 font-sans md:px-10" ref={containerRef}>
            <div ref={ref} className="relative max-w-7xl mx-auto pb-20">
                {data.map((item, index) => (
                    <div key={index} className="flex justify-start pt-10 md:pt-40 md:gap-10">
                        <div className="sticky flex flex-col md:flex-row z-40 items-center top-40 self-start max-w-xs lg:max-w-sm md:w-full">
                            <div className="h-10 absolute left-3 md:left-3 w-10 rounded-full bg-white dark:bg-black flex items-center justify-center">
                                <div className="h-4 w-4 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 border-2 border-white dark:border-black shadow-lg" />
                            </div>
                            <h3 className="hidden md:block text-xl md:pl-20 md:text-4xl font-bold text-blue-600 dark:text-blue-400">
                                {item.title}
                            </h3>
                        </div>

                        <div className="relative pl-20 pr-4 md:pl-4 w-full">
                            <h3 className="md:hidden block text-2xl mb-4 text-left font-bold text-blue-600 dark:text-blue-400">
                                {item.title}
                            </h3>
                            {item.content}
                        </div>
                    </div>
                ))}
                <div
                    style={{
                        height: height + 'px',
                    }}
                    className="absolute md:left-8 left-8 top-0 overflow-hidden w-[2px] bg-[linear-gradient(to_bottom,var(--tw-gradient-stops))] from-transparent from-[0%] via-neutral-200 dark:via-neutral-700 to-transparent to-[99%] [mask-image:linear-gradient(to_bottom,transparent_0%,black_10%,black_90%,transparent_100%)]"
                >
                    <motion.div
                        style={{
                            height: heightTransform,
                            opacity: opacityTransform,
                        }}
                        className="absolute inset-x-0 top-0 w-[2px] bg-gradient-to-t from-purple-500 via-blue-500 to-transparent from-[0%] via-[10%] rounded-full"
                    />
                </div>
            </div>
        </div>
    );
};

// Event Card Component
const EventCard = ({
    time,
    title,
    location,
    description,
    type,
}: {
    time: string;
    title: string;
    location: string;
    description: string;
    type: 'opening' | 'event' | 'performance' | 'break' | 'closing' | 'special';
}) => {
    const typeColors = {
        opening: 'bg-green-100 text-green-800 border-green-300',
        event: 'bg-blue-100 text-blue-800 border-blue-300',
        performance: 'bg-purple-100 text-purple-800 border-purple-300',
        break: 'bg-orange-100 text-orange-800 border-orange-300',
        closing: 'bg-red-100 text-red-800 border-red-300',
        special: 'bg-yellow-100 text-yellow-800 border-yellow-300',
    };

    const typeIcons = {
        opening: 'üé™',
        event: 'üéØ',
        performance: 'üé≠',
        break: 'üçΩÔ∏è',
        closing: 'üéâ',
        special: '‚≠ê',
    };

    return (
        <div className="bg-white dark:bg-neutral-800 rounded-xl p-6 shadow-lg border border-neutral-200 dark:border-neutral-700 hover:shadow-xl transition-all duration-300 hover:scale-105">
            <div className="flex items-center gap-3 mb-4">
                <span className="text-2xl">{typeIcons[type]}</span>
                <div className="flex-1">
                    <div
                        className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${typeColors[type]} mb-2`}
                    >
                        {type === 'opening' && 'Èñã‰ºö'}
                        {type === 'event' && '„Ç§„Éô„É≥„Éà'}
                        {type === 'performance' && '„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ'}
                        {type === 'break' && '‰ºëÊÜ©'}
                        {type === 'closing' && 'Èñâ‰ºö'}
                        {type === 'special' && 'ÁâπÂà•‰ºÅÁîª'}
                    </div>
                    <div className="text-lg font-bold text-blue-600 dark:text-blue-400">{time}</div>
                </div>
            </div>

            <h4 className="text-xl font-bold text-neutral-800 dark:text-neutral-200 mb-2">{title}</h4>

            <div className="flex items-center gap-2 mb-3">
                <span className="text-neutral-500">üìç</span>
                <span className="text-neutral-600 dark:text-neutral-400 font-medium">{location}</span>
            </div>

            <p className="text-neutral-600 dark:text-neutral-400 leading-relaxed">{description}</p>
        </div>
    );
};

// Main Timetable Component
const FestivalTimetable = () => {
    const [selectedDay, setSelectedDay] = useState<1 | 2>(1);

    // 1Êó•ÁõÆ„ÅÆ„Çø„Ç§„É†„ÉÜ„Éº„Éñ„É´
    const day1Schedule: TimelineEntry[] = [
        {
            title: '9:00',
            content: (
                <EventCard
                    time="9:00 - 9:30"
                    title="Èñã‰ºöÂºè"
                    location="‰ΩìËÇ≤È§®"
                    description="ÂéöÊú®È´òÊ†°ÊñáÂåñÁ•≠2024„ÅÆÈñãÂπï„Åß„ÅôÔºÅÊ†°Èï∑ÂÖàÁîü„ÅÆ„ÅîÊå®Êã∂„ÄÅÂÆüË°åÂßîÂì°Èï∑„ÅÆÊå®Êã∂„ÄÅÂêÑ„ÇØ„É©„Çπ‰ª£Ë°®„Å´„Çà„ÇãÊÑèÊ∞óËæº„ÅøÁô∫Ë°®„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ"
                    type="opening"
                />
            ),
        },
        {
            title: '10:00',
            content: (
                <div className="space-y-6">
                    <EventCard
                        time="10:00 - 12:00"
                        title="ÂêÑ„ÇØ„É©„Çπ‰ºÅÁîªÈñãÂßã"
                        location="Ê†°ÂÜÖÂêÑÊâÄ"
                        description="„ÅÑ„Çà„ÅÑ„ÇàÂêÑ„ÇØ„É©„Çπ„ÅÆ‰ºÅÁîª„Åå„Çπ„Çø„Éº„ÉàÔºÅ„Ç´„Éï„Çß„ÄÅ„ÅäÂåñ„ÅëÂ±ãÊï∑„ÄÅ„Ç≤„Éº„É†„Ç≥„Éº„Éä„Éº„Å™„Å©„ÄÅÂâµÊÑèÂ∑•Â§´„Å´ÂØå„Çì„Å†‰ºÅÁîª„Çí„ÅäÊ•Ω„Åó„Åø„Åè„Å†„Åï„ÅÑ„ÄÇ"
                        type="event"
                    />
                    <EventCard
                        time="10:30 - 11:00"
                        title="ÂêπÂ•èÊ•ΩÈÉ® „Ç¶„Çß„É´„Ç´„É†„Ç≥„É≥„Çµ„Éº„Éà"
                        location="‰∏≠Â∫≠„Çπ„ÉÜ„Éº„Ç∏"
                        description="ÊñáÂåñÁ•≠„ÇíÁõõ„Çä‰∏ä„Åí„ÇãÂêπÂ•èÊ•ΩÈÉ®„Å´„Çà„ÇãÊ≠ìËøéÊºîÂ•è‰ºö„ÄÇ„Éù„ÉÉ„Éó„Çπ„Åã„Çâ„ÇØ„É©„Ç∑„ÉÉ„ÇØ„Åæ„ÅßÂπÖÂ∫É„ÅÑ„É¨„Éë„Éº„Éà„É™„Éº„Åß„ÅäÂá∫Ëøé„Åà„Åó„Åæ„Åô„ÄÇ"
                        type="performance"
                    />
                </div>
            ),
        },
        {
            title: '12:00',
            content: (
                <EventCard
                    time="12:00 - 13:00"
                    title="ÊòºÈ£ü‰ºëÊÜ©"
                    location="Ê†°ÂÜÖÂêÑÊâÄ"
                    description="ÂêÑ„ÇØ„É©„Çπ„ÅÆÈ£ü„ÅπÁâ©‰ºÅÁîª„ÇÑÊåÅÂèÇ„Åó„Åü„ÅäÂºÅÂΩì„Åß„É©„É≥„ÉÅ„Çø„Ç§„É†„ÄÇÂèãÈÅî„Å®‰∏ÄÁ∑í„Å´ÊñáÂåñÁ•≠„Ç∞„É´„É°„ÇíÊ•Ω„Åó„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇ"
                    type="break"
                />
            ),
        },
        {
            title: '13:00',
            content: (
                <div className="space-y-6">
                    <EventCard
                        time="13:00 - 15:00"
                        title="ÂçàÂæå„ÅÆ‰ºÅÁîªÂÜçÈñã"
                        location="Ê†°ÂÜÖÂêÑÊâÄ"
                        description="ÂçàÂæå„ÇÇÂêÑ„ÇØ„É©„Çπ‰ºÅÁîª„ÅåÁ∂ö„Åç„Åæ„Åô„ÄÇÂçàÂâç‰∏≠„Å´Âõû„Çå„Å™„Åã„Å£„Åü‰ºÅÁîª„Å´„ÇÇ„Åú„Å≤Ë∂≥„ÇíÈÅã„Çì„Åß„Åø„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ"
                        type="event"
                    />
                    <EventCard
                        time="13:30 - 14:30"
                        title="„ÉÄ„É≥„ÇπÈÉ®„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ"
                        location="‰ΩìËÇ≤È§®"
                        description="Âàá„Çå„ÅÆ„ÅÇ„Çã„ÉÄ„É≥„Çπ„Åß‰ºöÂ†¥„ÇíÊ≤∏„Åã„Åõ„Çã„ÉÄ„É≥„ÇπÈÉ®„ÅÆÂÖ¨Êºî„ÄÇ‰ªäÂπ¥„ÅÆ„ÉÜ„Éº„Éû„ÅØ„ÄåÈùíÊò•„Äç„Åß„Åô„ÄÇ"
                        type="performance"
                    />
                </div>
            ),
        },
        {
            title: '15:00',
            content: (
                <div className="space-y-6">
                    <EventCard
                        time="15:00 - 15:30"
                        title="„Çπ„Éö„Ç∑„É£„É´„Ç≤„Çπ„ÉàÁôªÂ†¥"
                        location="‰∏≠Â∫≠„Çπ„ÉÜ„Éº„Ç∏"
                        description="Âú∞ÂÖÉÂá∫Ë∫´„ÅÆ„Ç∑„É≥„Ç¨„Éº„ÇΩ„É≥„Ç∞„É©„Ç§„Çø„Éº„ÄåÂ±±Áî∞Â§™ÈÉé„Äç„Åï„Çì„Å´„Çà„Çã„É©„Ç§„Éñ„Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÔºÅ"
                        type="special"
                    />
                    <EventCard
                        time="15:30 - 16:30"
                        title="ÂêÑ„ÇØ„É©„Çπ‰ºÅÁîªÊúÄÁµÇÊôÇÈñì"
                        location="Ê†°ÂÜÖÂêÑÊâÄ"
                        description="1Êó•ÁõÆÊúÄÂæå„ÅÆ„ÉÅ„É£„É≥„ÇπÔºÅÊ∞ó„Å´„Å™„Å£„Å¶„ÅÑ„Åü‰ºÅÁîª„Å´ÂèÇÂä†„Åô„Çã„Å™„Çâ‰ªä„Åß„Åô„ÄÇ"
                        type="event"
                    />
                </div>
            ),
        },
        {
            title: '16:30',
            content: (
                <EventCard
                    time="16:30 - 17:00"
                    title="1Êó•ÁõÆÁµÇ‰∫Ü„ÉªÁâá‰ªò„Åë"
                    location="Ê†°ÂÜÖÂêÑÊâÄ"
                    description="1Êó•ÁõÆ„ÅäÁñ≤„ÇåÊßò„Åß„Åó„ÅüÔºÅÊòéÊó•„Å´Âêë„Åë„Å¶ÂêÑ„ÇØ„É©„ÇπÁâá‰ªò„Åë„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ‰∏ÄËà¨Êù•Â†¥ËÄÖ„ÅÆÁöÜÊßò„ÄÅ„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åó„Åü„ÄÇ"
                    type="closing"
                />
            ),
        },
    ];

    // 2Êó•ÁõÆ„ÅÆ„Çø„Ç§„É†„ÉÜ„Éº„Éñ„É´
    const day2Schedule: TimelineEntry[] = [
        {
            title: '9:30',
            content: (
                <EventCard
                    time="9:30 - 10:00"
                    title="2Êó•ÁõÆÈñãÂßãÊ∫ñÂÇô"
                    location="Ê†°ÂÜÖÂêÑÊâÄ"
                    description="ÊñáÂåñÁ•≠2Êó•ÁõÆ„Åå„Çπ„Çø„Éº„ÉàÔºÅÊò®Êó•‰ª•‰∏ä„Å´Áõõ„Çä‰∏ä„Åå„Çã‰∏ÄÊó•„Å´„Åó„Å¶„ÅÑ„Åç„Åæ„Åó„Çá„ÅÜ„ÄÇÂêÑ„ÇØ„É©„ÇπÊúÄÁµÇÊ∫ñÂÇô„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ"
                    type="opening"
                />
            ),
        },
        {
            title: '10:00',
            content: (
                <div className="space-y-6">
                    <EventCard
                        time="10:00 - 12:00"
                        title="ÂêÑ„ÇØ„É©„Çπ‰ºÅÁîªÈñãÂßãÔºà2Êó•ÁõÆÔºâ"
                        location="Ê†°ÂÜÖÂêÑÊâÄ"
                        description="2Êó•ÁõÆ„ÇÇÂêÑ„ÇØ„É©„Çπ‰ºÅÁîª„ÅåÂÖÉÊ∞ó„Å´„Çπ„Çø„Éº„ÉàÔºÅÊò®Êó•„ÅÆÁµåÈ®ì„ÇíÊ¥ª„Åã„Åó„Å¶„Åï„Çâ„Å´„Éë„ÉØ„Éº„Ç¢„ÉÉ„Éó„Åó„Åü‰ºÅÁîª„Çí„ÅäÊ•Ω„Åó„Åø„Åè„Å†„Åï„ÅÑ„ÄÇ"
                        type="event"
                    />
                    <EventCard
                        time="10:30 - 11:30"
                        title="ÂêàÂî±ÈÉ®„Ç≥„É≥„Çµ„Éº„Éà"
                        location="Èü≥Ê•ΩÂÆ§"
                        description="Áæé„Åó„ÅÑ„Éè„Éº„É¢„Éã„Éº„ÇíÂ•è„Åß„ÇãÂêàÂî±ÈÉ®„Å´„Çà„ÇãÁâπÂà•ÂÖ¨Êºî„ÄÇÂøÉÊ∏©„Åæ„ÇãÊ≠åÂ£∞„Çí„ÅäÂ±ä„Åë„Åó„Åæ„Åô„ÄÇ"
                        type="performance"
                    />
                </div>
            ),
        },
        {
            title: '12:00',
            content: (
                <EventCard
                    time="12:00 - 13:00"
                    title="ÊòºÈ£ü‰ºëÊÜ©"
                    location="Ê†°ÂÜÖÂêÑÊâÄ"
                    description="2Êó•ÁõÆ„ÅÆ„É©„É≥„ÉÅ„Çø„Ç§„É†„ÄÇ‰∫∫Ê∞ó„ÅÆÈ£ü„ÅπÁâ©‰ºÅÁîª„ÅØÂ£≤„ÇäÂàá„ÇåÂâç„Å´„ÅäÊó©„ÇÅ„Å´ÔºÅ"
                    type="break"
                />
            ),
        },
        {
            title: '13:00',
            content: (
                <div className="space-y-6">
                    <EventCard
                        time="13:00 - 14:30"
                        title="ÊñáÂåñÁ•≠„Ç∞„É©„É≥„Éó„É™ÊäïÁ•®ÈñãÂßã"
                        location="Ê†°ÂÜÖÂêÑÊâÄ"
                        description="ÊúÄÂÑ™ÁßÄ‰ºÅÁîª„ÇíÊ±∫„ÇÅ„Çã„ÄåÊñáÂåñÁ•≠„Ç∞„É©„É≥„Éó„É™„Äç„ÅÆÊäïÁ•®„Åå„Çπ„Çø„Éº„ÉàÔºÅ„ÅäÊ∞ó„Å´ÂÖ•„Çä„ÅÆ‰ºÅÁîª„Å´ÊäïÁ•®„Åó„Çà„ÅÜ„ÄÇ"
                        type="special"
                    />
                    <EventCard
                        time="13:30 - 14:00"
                        title="ËªΩÈü≥ÈÉ®„É©„Ç§„Éñ"
                        location="‰ΩìËÇ≤È§®"
                        description="‰ªäÂπ¥ÁµêÊàê„Åï„Çå„ÅüËªΩÈü≥ÈÉ®„Å´„Çà„ÇãÂàù„ÅÆ„É©„Ç§„Éñ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÄÇ„Éï„É¨„ÉÉ„Ç∑„É•„Å™ÊºîÂ•è„Çí„ÅäËÅû„Åç„Åè„Å†„Åï„ÅÑ„ÄÇ"
                        type="performance"
                    />
                </div>
            ),
        },
        {
            title: '14:30',
            content: (
                <div className="space-y-6">
                    <EventCard
                        time="14:30 - 15:30"
                        title="„ÅäÁ¨ë„ÅÑËä∏‰∫∫„ÄåÂéöÊú®ÂÖÑÂºü„Äç„É©„Ç§„Éñ"
                        location="‰ΩìËÇ≤È§®"
                        description="Âú∞ÂÖÉ„ÅßÊ¥ªÂãï„Åô„Çã„ÅäÁ¨ë„ÅÑËä∏‰∫∫„ÄåÂéöÊú®ÂÖÑÂºü„Äç„Å´„Çà„ÇãÁàÜÁ¨ë„É©„Ç§„ÉñÔºÅ‰ºöÂ†¥„ÅåÁ¨ë„ÅÑ„ÅÆÊ∏¶„Å´ÂåÖ„Åæ„Çå„Åæ„Åô„ÄÇ"
                        type="special"
                    />
                    <EventCard
                        time="15:00 - 15:30"
                        title="ÊäïÁ•®Á∑†Âàá„ÉªÈõÜË®àÈñãÂßã"
                        location="Êú¨ÈÉ®"
                        description="ÊñáÂåñÁ•≠„Ç∞„É©„É≥„Éó„É™„ÅÆÊäïÁ•®„ÅåÁ∑†„ÇÅÂàá„Çâ„Çå„ÄÅÈõÜË®à‰ΩúÊ•≠„ÅåÈñãÂßã„Åï„Çå„Åæ„Åô„ÄÇÁµêÊûúÁô∫Ë°®„Çí„ÅäÊ•Ω„Åó„Åø„Å´ÔºÅ"
                        type="event"
                    />
                </div>
            ),
        },
        {
            title: '15:30',
            content: (
                <div className="space-y-6">
                    <EventCard
                        time="15:30 - 16:00"
                        title="ÂêÑ„ÇØ„É©„Çπ‰ºÅÁîªÁµÇ‰∫Ü"
                        location="Ê†°ÂÜÖÂêÑÊâÄ"
                        description="2Êó•Èñì„Å´„Çè„Åü„ÇãÂêÑ„ÇØ„É©„Çπ‰ºÅÁîª„Åå„ÅÑ„Çà„ÅÑ„ÇàÁµÇ‰∫Ü„ÄÇÁöÜÊßò„ÅÆ„ÅîÊù•Â†¥„ÄÅ„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åó„ÅüÔºÅ"
                        type="event"
                    />
                    <EventCard
                        time="16:00 - 16:30"
                        title="Èñâ‰ºöÂºè„ÉªÁµêÊûúÁô∫Ë°®"
                        location="‰ΩìËÇ≤È§®"
                        description="ÊñáÂåñÁ•≠„Ç∞„É©„É≥„Éó„É™„ÅÆÁµêÊûúÁô∫Ë°®„Å®Ë°®ÂΩ∞Âºè„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ„Å©„ÅÆ„ÇØ„É©„Çπ„ÅåÊ†ÑÂÜ†„ÇíÊâã„Å´„Åô„Çã„Åß„Åó„Çá„ÅÜ„ÅãÔºü"
                        type="special"
                    />
                </div>
            ),
        },
        {
            title: '16:30',
            content: (
                <EventCard
                    time="16:30 - 17:30"
                    title="ÊñáÂåñÁ•≠ÁµÇ‰∫Ü„ÉªÁâá‰ªò„Åë"
                    location="Ê†°ÂÜÖÂêÑÊâÄ"
                    description="ÂéöÊú®È´òÊ†°ÊñáÂåñÁ•≠2024„ÄÅ„Å§„ÅÑ„Å´ÁµÇ‰∫Ü„Åß„ÅôÔºÅ2Êó•Èñì„ÅÆÊÄù„ÅÑÂá∫„ÇíËÉ∏„Å´„ÄÅÁâá‰ªò„Åë‰ΩúÊ•≠„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇÊù•Âπ¥„ÇÇ„ÅäÊ•Ω„Åó„Åø„Å´ÔºÅ"
                    type="closing"
                />
            ),
        },
    ];

    return (
        <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 dark:from-neutral-950 dark:to-neutral-900">
            {/* Header */}
            <div className="max-w-7xl mx-auto py-20 px-4 md:px-8 lg:px-10">
                <h1 className="text-3xl md:text-6xl font-bold text-center mb-4 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                    ÊñáÂåñÁ•≠„Çø„Ç§„É†„ÉÜ„Éº„Éñ„É´
                </h1>
                <p className="text-neutral-700 dark:text-neutral-300 text-lg md:text-xl text-center max-w-3xl mx-auto mb-12">
                    ÂéöÊú®È´òÊ†°ÊñáÂåñÁ•≠2024„ÅÆË©≥Á¥∞„Çπ„Ç±„Ç∏„É•„Éº„É´„ÄÇË¶ãÈÄÉ„Åó„Åü„Åè„Å™„ÅÑ„Ç§„Éô„É≥„Éà„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶„ÄÅÂÖÖÂÆü„Åó„Åü2Êó•Èñì„Çí„ÅäÈÅé„Åî„Åó„Åè„Å†„Åï„ÅÑÔºÅ
                </p>

                {/* Day Selector */}
                <div className="flex justify-center mb-12">
                    <div className="bg-white dark:bg-neutral-800 rounded-full p-2 shadow-lg border border-neutral-200 dark:border-neutral-700">
                        <button
                            onClick={() => setSelectedDay(1)}
                            className={`px-8 py-3 rounded-full font-bold transition-all duration-300 ${
                                selectedDay === 1
                                    ? 'bg-gradient-to-r from-blue-500 to-purple-500 text-white shadow-lg'
                                    : 'text-neutral-600 dark:text-neutral-400 hover:text-neutral-800 dark:hover:text-neutral-200'
                            }`}
                        >
                            1Êó•ÁõÆÔºàÂúüÊõúÊó•Ôºâ
                        </button>
                        <button
                            onClick={() => setSelectedDay(2)}
                            className={`px-8 py-3 rounded-full font-bold transition-all duration-300 ${
                                selectedDay === 2
                                    ? 'bg-gradient-to-r from-blue-500 to-purple-500 text-white shadow-lg'
                                    : 'text-neutral-600 dark:text-neutral-400 hover:text-neutral-800 dark:hover:text-neutral-200'
                            }`}
                        >
                            2Êó•ÁõÆÔºàÊó•ÊõúÊó•Ôºâ
                        </button>
                    </div>
                </div>

                {/* Date Display */}
                <div className="text-center mb-8">
                    <div className="inline-flex items-center gap-2 bg-white dark:bg-neutral-800 rounded-lg px-6 py-3 shadow-lg border border-neutral-200 dark:border-neutral-700">
                        <span className="text-2xl">üìÖ</span>
                        <span className="text-lg font-semibold text-neutral-800 dark:text-neutral-200">
                            {selectedDay === 1 ? '2024Âπ¥10Êúà26Êó•ÔºàÂúüÔºâ' : '2024Âπ¥10Êúà27Êó•ÔºàÊó•Ôºâ'}
                        </span>
                    </div>
                </div>
            </div>

            {/* Timeline */}
            <motion.div
                key={selectedDay}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -20 }}
                transition={{ duration: 0.5 }}
            >
                <Timeline data={selectedDay === 1 ? day1Schedule : day2Schedule} />
            </motion.div>

            {/* Footer Info */}
            <div className="max-w-7xl mx-auto items-center justify-center px-4 md:px-8 lg:px-10 pb-20 mt-20">
                <div className="bg-white dark:bg-neutral-800 rounded-2xl p-8 shadow-lg border border-neutral-200 dark:border-neutral-700">
                    <h3 className="text-2xl font-bold mb-6 text-neutral-800 dark:text-neutral-200 text-center">
                        üö® ÈáçË¶Å„Å™„ÅäÁü•„Çâ„Åõ
                    </h3>
                    <div className="grid md:grid-cols-2 gap-6">
                        <div className="space-y-4">
                            <div className="flex items-start gap-3">
                                <span className="text-xl">üïê</span>
                                <div>
                                    <h4 className="font-bold text-neutral-800 dark:text-neutral-200">ÈñãÂ†¥ÊôÇÈñì</h4>
                                    <p className="text-neutral-600 dark:text-neutral-400">
                                        ‰∏°Êó•„Å®„ÇÇ9:00„Åã„ÇâÂÖ•Â†¥ÂèØËÉΩ„Åß„Åô
                                    </p>
                                </div>
                            </div>
                            <div className="flex items-start gap-3">
                                <span className="text-xl">üé´</span>
                                <div>
                                    <h4 className="font-bold text-neutral-800 dark:text-neutral-200">ÂÖ•Â†¥Êñô</h4>
                                    <p className="text-neutral-600 dark:text-neutral-400">ÁÑ°ÊñôÔºà‰∏ÄÈÉ®‰ºÅÁîª„ÅØÊúâÊñôÔºâ</p>
                                </div>
                            </div>
                        </div>
                        <div className="space-y-4">
                            <div className="flex items-start gap-3">
                                <span className="text-xl">üöó</span>
                                <div>
                                    <h4 className="font-bold text-neutral-800 dark:text-neutral-200">ÈßêËªäÂ†¥</h4>
                                    <p className="text-neutral-600 dark:text-neutral-400">
                                        Ê†°ÂÜÖÈßêËªäÂ†¥„Çí„ÅîÂà©Áî®„Åè„Å†„Åï„ÅÑÔºàÂè∞Êï∞ÈôêÂÆöÔºâ
                                    </p>
                                </div>
                            </div>
                            <div className="flex items-start gap-3">
                                <span className="text-xl">üì±</span>
                                <div>
                                    <h4 className="font-bold text-neutral-800 dark:text-neutral-200">„ÅäÂïè„ÅÑÂêà„Çè„Åõ</h4>
                                    <p className="text-neutral-600 dark:text-neutral-400">ÊñáÂåñÁ•≠ÂÆüË°åÂßîÂì°‰ºö„Åæ„Åß</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default FestivalTimetable;
